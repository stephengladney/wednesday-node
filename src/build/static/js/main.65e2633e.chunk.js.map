{"version":3,"sources":["wednesday.js","time.js","components/App/Navbar/NavItem/NavItem.js","components/App/Dashboard/Spotify/Spotify.js","components/App/Navbar/Navbar.js","components/App/Dashboard/Spotify/SpotifyPlayer/SpotifyTrackInfo/SpotifyTrackInfo.js","components/App/Dashboard/Spotify/SpotifyPlayer/SpotifyPlayer.js","components/App/Dashboard/Spotify/SpotifyPlayer/SongProgressBar/SongProgressBar.js","components/App/Dashboard/Weather/FutureDay/FutureDay.js","components/App/Dashboard/Weather/FutureHour/FutureHour.js","components/App/Dashboard/Loading.js","components/App/Dashboard/Weather/WeatherSummaryDetail/WeatherSummaryDetail.js","components/App/Dashboard/Weather/Weather.js","components/App/Dashboard/Vehicle/Vehicle.js","components/App/Dashboard/News/News.js","components/App/Dashboard/Settings/Settings.js","components/App/Dashboard/Home/Home.js","components/App/Dashboard/Dashboard.js","components/App/Wednesday/Wednesday.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","myLocation","Promise","resolve","reject","navigator","geolocation","getCurrentPosition","position","coordinates","latitude","coords","longitude","error","errorMessage","code","weatherService","axios","get","then","apiResponse","data","response","Number","toFixed","concat","catch","e","randomWednesdayQuote","quotes","Math","floor","random","length","require","todaysDate","format","today","Date","day","getDate","m","getMonth","year","getFullYear","months","output","String","toLowerCase","indexOf","replace","substring","doubleDigit","timeNow","arguments","undefined","h","getHours","getMinutes","toDoubleDigit","toTwelveHour","addAmPm","isItDayOrNight","sunset","currentTime","now","abbreviateWeekday","substr","nextFiveWeekdays","currentDay","days","getDay","nextFiveDays","i","push","standardizeTime","raw","time","militarizeTime","abbreviateTime","timeArray","split","splice","join","secondsToMinutes","seconds","minutes","location","timeMarker","NavItem","_ref","item","icon","window","pathname","react_default","a","createElement","src","style","height","width","alt","className","backgroundColor","Navbar","Link","to","Navbar_NavItem_NavItem","SpotifyTrackInfo","header","text","display","alignItems","SpotifyPlayer","artist","song","album","albumArtUrl","isPlaying","shuffle","isLocal","shuffleEnabled","next","previous","playOrPause","playOrPauseCurrentButton","shuffleButtonColor","color","SpotifyPlayer_SpotifyTrackInfo_SpotifyTrackInfo","onClick","songProgressBar","currentMilliseconds","totalMillieconds","round","Spotify","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","updateSpotifyState","bind","assertThisInitialized","clearInterval","which","_this2","setState","progressBarOn","setTimeout","alert","_this3","_this4","_this5","trueOrFalse","_this6","setInterval","songDuration","progress","_this7","images","url","artists","name","duration_ms","is_playing","shuffle_state","progress_ms","Spotify_SpotifyPlayer_SpotifyPlayer","SongProgressBar_SongProgressBar","Component","FutureDay","high","low","FutureHour","hour","temperature","Loading","left","top","WeatherSummaryDetail","detailName","detailValue","Weather","weatherRefresher","updateWeather","loading","weather","sunrise","daily","sunriseTime","sunsetTime","current","summary","currently","cloudCover","humidity","windSpeed","temperatureHigh","temperatureLow","timeFormat","hourly","console","log","Dashboard_Loading","todayForecast","Weather_FutureHour_FutureHour","key","fiveDayForecast","map","index","Weather_FutureDay_FutureDay","flexDirection","justifyContent","paddingRight","href","units","Weather_WeatherSummaryDetail_WeatherSummaryDetail","marginTop","Vehicle","News","margin","Settings","Home","Dashboard","Switch","Route","exact","path","component","render","Dashboard_Weather_Weather","Dashboard_Vehicle_Vehicle","Dashboard_News_News","Dashboard_Settings_Settings","Wednesday","id","App","App_Navbar_Navbar","App_Dashboard_Dashboard","App_Wednesday_Wednesday","Boolean","hostname","match","ReactDOM","BrowserRouter","src_App_0","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.65e2633e.chunk.js","sourcesContent":["module.exports = {\n  myLocation: myLocation,\n  weatherService: weatherService,\n  randomWednesdayQuote: randomWednesdayQuote\n};\n\nconst axios = require(\"axios\");\n\nfunction randomWednesdayQuote() {\n  const quotes = [\n    \"Mon cher.\",\n    \"Nobody gets out of the Bermuda Triangle, not even for a vacation. Everyone knows that.\",\n    \"Are they made from real Girl Scouts?\",\n    \"If I wanted to kill my husband, I'd do it, and I wouldn't get caught.\",\n    \"I'll clean my room. In exchange for your immortal soul.\",\n    \"Do not trust the Pilgrims, especially Sarah Miller.\",\n    \"Don't be a baby. I know what I'm doing.\"\n  ];\n  return quotes[Math.floor(Math.random() * quotes.length)];\n}\n\nfunction myLocation() {\n  return new Promise((resolve, reject) =>\n    navigator.geolocation.getCurrentPosition(\n      position => {\n        let coordinates = {\n          latitude: position.coords.latitude,\n          longitude: position.coords.longitude\n        };\n        resolve(coordinates);\n      },\n      error => {\n        let errorMessage;\n        switch (error.code) {\n          case 1:\n            errorMessage = \"Permission denied\";\n            break;\n          case 2:\n            errorMessage = \"Position unavailable\";\n            break;\n          case 3:\n            errorMessage = \"Timed out\";\n            break;\n          default:\n            errorMessage = \"Unknown error\";\n        }\n        reject(errorMessage);\n      }\n    )\n  );\n}\n\nfunction weatherService() {\n  return new Promise((resolve, reject) => {\n    axios\n      .get(\"api/tesla/state/drive\")\n      .then(apiResponse => {\n        apiResponse.data.response.latitude = Number(\n          apiResponse.data.response.latitude\n        ).toFixed(4);\n        apiResponse.data.response.longitude = Number(\n          apiResponse.data.response.longitude\n        ).toFixed(4);\n        axios\n          .get(\n            `api/weather/${apiResponse.data.response.latitude},${\n              apiResponse.data.response.longitude\n            }`\n          )\n          .then(response => {\n            resolve(response.data); //response.data b/c it's an axios call\n          })\n          .catch(e => reject(`Error getting weather: ${e}`));\n      })\n      .catch(e => reject(`Error getting location: ${e}`));\n  });\n}\n","module.exports = {\n  todaysDate: todaysDate,\n  timeNow: timeNow,\n  isItDayOrNight: isItDayOrNight,\n  abbreviateWeekday: abbreviateWeekday,\n  nextFiveWeekdays: nextFiveWeekdays,\n  toTwelveHour: toTwelveHour,\n  toDoubleDigit: toDoubleDigit,\n  standardizeTime: standardizeTime,\n  militarizeTime: militarizeTime,\n  abbreviateTime: abbreviateTime,\n  secondsToMinutes: secondsToMinutes\n};\n\nconst days = [\n  \"Sunday\",\n  \"Monday\",\n  \"Tuesday\",\n  \"Wednesday\",\n  \"Thursday\",\n  \"Friday\",\n  \"Saturday\"\n];\n\nfunction abbreviateWeekday(day) {\n  switch (day) {\n    case \"Thursday\":\n      return \"Thurs\";\n    default:\n      return String(day).substr(0, 3);\n  }\n}\n\nfunction standardizeTime(raw) {\n  const time = new Date(raw * 1000);\n  const h = time.getHours();\n  const m = time.getMinutes();\n  return `${toTwelveHour(h)}:${toDoubleDigit(m)} ${addAmPm(h)}`;\n}\n\nfunction militarizeTime(raw) {\n  const time = new Date(raw * 1000);\n  const h = time.getHours();\n  const m = time.getMinutes();\n  return `${toDoubleDigit(h)}:${toDoubleDigit(m)}`;\n}\n\nfunction currentWeekday() {\n  return days[new Date().getDay()];\n}\n\nfunction nextFiveWeekdays() {\n  let currentDay = days.indexOf(currentWeekday());\n  const nextFiveDays = [];\n  for (let i = 1; i <= 5; i++) {\n    switch (currentDay) {\n      case days.length - 1:\n        currentDay = 0;\n        break;\n      default:\n        currentDay++;\n    }\n    nextFiveDays.push(days[currentDay]);\n  }\n  return nextFiveDays;\n}\n\nfunction todaysDate(format) {\n  const today = new Date();\n  const day = today.getDate();\n  const m = today.getMonth() + 1;\n  const year = today.getFullYear();\n  const months = [\n    \"\",\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\"\n  ];\n  let output = String(format).toLowerCase();\n\n  // format year\n  if (output.indexOf(\"yyyy\") !== -1) {\n    output = output.replace(\"yyyy\", year);\n  } else {\n    output = output.replace(\"yy\", String(year).substring(2));\n  }\n  //format day\n  if (output.indexOf(\"dd\") !== -1) {\n    output = output.replace(\"dd\", doubleDigit(day));\n  } else {\n    output = output.replace(\"d\", day);\n  }\n  //format month\n  if (output.indexOf(\"mmmm\") !== -1) {\n    output = output.replace(\"mmmm\", months[m]);\n  } else if (output.indexOf(\"mmm\") !== -1) {\n    output = output.replace(\"mmm\", String(months[m]).substring(0, 3));\n  } else if (output.indexOf(\"mm\") !== -1) {\n    output = output.replace(\"mm\", doubleDigit(m));\n  } else if (output.indexOf(\"m\") !== -1) {\n    output = output.replace(\"m\", String(m));\n  }\n\n  return output;\n}\n\nfunction toDoubleDigit(i) {\n  return i < 10 ? \"0\" + String(i) : String(i);\n}\n\nfunction toTwelveHour(i) {\n  if (i == 0) {\n    return 12;\n  } else if (i > 12) {\n    return i - 12;\n  } else {\n    return i;\n  }\n}\n\nfunction addAmPm(i) {\n  return i < 12 ? \"AM\" : \"PM\";\n}\n\nfunction secondsToMinutes(seconds) {\n  const minutes = Math.floor(seconds / 60);\n  seconds = seconds % 60;\n  return `${minutes}:${toDoubleDigit(seconds)}`;\n}\n\nfunction timeNow(format = 12 /* || 24 */) {\n  const today = new Date(),\n    h = today.getHours(),\n    m = today.getMinutes();\n\n  return format === 24\n    ? `${toDoubleDigit(h)}:${toDoubleDigit(m)}`\n    : `${toTwelveHour(h)}:${toDoubleDigit(m)} ${addAmPm(h)}`;\n}\n\nfunction abbreviateTime(time) {\n  const timeArray = time.split(\"\");\n  const removed = timeArray.splice(timeArray.indexOf(\":\"), 4);\n  return timeArray.join(\"\");\n}\n\nfunction isItDayOrNight(sunset) {\n  const currentTime = Date.now();\n  if (Number(sunset) > currentTime) return \"day\";\n  if (Number(sunset) < currentTime) return \"night\";\n}\n\nfunction doubleDigit(i) {\n  return i < 10 ? \"0\" + String(i) : String(i);\n}\n","import React from \"react\";\nimport \"./NavItem.css\";\nlet location;\n\nconst NavItem = ({ item, icon }) => {\n  if (window.location.pathname === \"/\") {\n    location = \"home\";\n  } else {\n    location = String(window.location.pathname).substring(1);\n  }\n  switch (icon) {\n    case \"model_s\":\n      icon = (\n        <img\n          src=\"images/model_s.svg\"\n          style={{ height: \"56px\", width: \"56px\" }}\n          alt=\"model s\"\n        />\n      );\n      break;\n    case \"weather\":\n      icon = (\n        <img\n          src=\"images/weather_icons/partly-cloudy-day.png\"\n          style={{ height: \"32px\", width: \"32px\" }}\n          alt=\"weather\"\n        />\n      );\n      break;\n    default:\n      icon = <i className={icon + \" icon big\"} />;\n  }\n  return (\n    <div\n      style={{\n        backgroundColor: location === item ? \"#555555\" : \"#111111\"\n      }}\n      className=\"navItem\"\n    >\n      <span className=\"helper\" />\n      {icon}\n    </div>\n  );\n};\n\nexport default NavItem;\n","import React, { Component } from \"react\";\nimport { secondsToMinutes } from \"../../../../time\";\nimport SpotifyPlayer from \"./SpotifyPlayer/SpotifyPlayer\";\nimport SongProgressBar from \"./SpotifyPlayer/SongProgressBar/SongProgressBar\";\nimport axios from \"axios\";\n\nvar timeMarker;\n\nclass Spotify extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n    this.updateSpotifyState = this.updateSpotifyState.bind(this);\n    this.playOrPause = this.playOrPause.bind(this);\n    this.shuffle = this.shuffle.bind(this);\n    this.previous = this.previous.bind(this);\n    this.next = this.next.bind(this);\n  }\n  componentDidMount() {\n    this.updateSpotifyState();\n  }\n\n  componentWillUnmount() {\n    clearInterval(timeMarker);\n  }\n\n  playOrPause(which) {\n    axios\n      .get(`/api/spotify/player/${which}`)\n      .then(response => {\n        if (response.data === \"success\") {\n          this.setState({ isPlaying: !this.state.isPlaying });\n          if (which === \"play\") {\n            this.progressBarOn(true);\n            setTimeout(this.updateSpotifyState, 1000);\n          } else {\n            this.progressBarOn(false);\n          }\n        } else {\n          alert(\"Error:\" + response.data);\n        }\n      })\n      .catch(error => alert(error));\n  }\n\n  shuffle() {\n    axios\n      .get(`/api/spotify/player/shuffle?value=${!this.state.shuffleEnabled}`)\n      .then(response => {\n        if (response.data === \"success\") {\n          setTimeout(this.updateSpotifyState, 1000);\n        }\n      })\n      .catch(error => alert(error));\n  }\n\n  previous() {\n    axios.get(\"api/spotify/player/previous\").then(response => {\n      if (response.data === \"success\") {\n        setTimeout(this.updateSpotifyState, 1000);\n      }\n    });\n  }\n\n  next() {\n    axios.get(\"api/spotify/player/next\").then(response => {\n      if (response.data === \"success\") {\n        setTimeout(this.updateSpotifyState, 1000);\n      }\n    });\n  }\n\n  progressBarOn(trueOrFalse) {\n    if (trueOrFalse === true) {\n      timeMarker = setInterval(() => {\n        if (this.state.songDuration - this.state.progress < 2000) {\n          clearInterval(timeMarker);\n          setTimeout(this.updateSpotifyState, 1000);\n        }\n        this.setState({ progress: this.state.progress + 1000 });\n      }, 1000);\n    } else {\n      clearInterval(timeMarker);\n    }\n  }\n\n  updateSpotifyState() {\n    clearInterval(timeMarker);\n    axios\n      .get(\"api/spotify/player/state\")\n      .then(response => {\n        this.setState({\n          albumArtUrl: response.data.item.album.images[0].url,\n          artist: response.data.item.artists[0].name,\n          song: response.data.item.name,\n          songDuration: response.data.item.duration_ms,\n          album: response.data.item.album.name,\n          isPlaying: response.data.is_playing,\n          shuffleEnabled: response.data.shuffle_state,\n          progress: response.data.progress_ms\n        });\n        if (response.data.is_playing === true) {\n          this.progressBarOn(true);\n        }\n\n        // if (this.state.songDuration - this.state.progress < 2000) {\n        //   this.updateSpotifyState();\n        // }\n      })\n      .catch(error => alert(error));\n  }\n\n  render() {\n    return (\n      <div>\n        <h1 className=\"title\">spotify</h1>\n        <div className=\"content\">\n          <h2 className=\"subtitle\">Currently Listening To</h2>\n          <SpotifyPlayer\n            artist={this.state.artist}\n            song={this.state.song}\n            album={this.state.album}\n            albumArtUrl={this.state.albumArtUrl}\n            isPlaying={this.state.isPlaying}\n            shuffle={this.shuffle}\n            shuffleEnabled={this.state.shuffleEnabled}\n            playOrPause={this.playOrPause}\n            previous={this.previous}\n            next={this.next}\n          />\n          <SongProgressBar\n            currentMilliseconds={this.state.progress}\n            totalMillieconds={this.state.songDuration}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Spotify;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./Navbar.css\";\nimport NavItem from \"./NavItem/NavItem\";\n\nconst Navbar = () => {\n  return (\n    <div className=\"Navbar\">\n      <Link to={\"/home\"} className=\"Link\">\n        <NavItem item=\"home\" icon=\"home\" />\n      </Link>\n      <Link to={\"/vehicle\"} className=\"Link\">\n        <NavItem item=\"vehicle\" icon=\"model_s\" />\n      </Link>\n      <Link to={\"/weather\"} className=\"Link\">\n        <NavItem item=\"weather\" icon=\"weather\" />\n      </Link>\n      <Link to={\"/spotify\"} className=\"Link\">\n        <NavItem item=\"spotify\" icon=\"spotify\" />\n      </Link>\n      <Link to={\"/sports\"} className=\"Link\">\n        <NavItem item=\"sports\" icon=\"football ball\" />\n      </Link>\n      <Link to={\"/news\"} className=\"Link\">\n        <NavItem item=\"news\" icon=\"newspaper outline\" />\n      </Link>\n      <Link to={\"/games\"} className=\"Link\">\n        <NavItem item=\"games\" icon=\"gamepad\" />\n      </Link>\n      <Link to={\"/unomas\"} className=\"Link\">\n        <NavItem item=\"unomas\" icon=\"question circle outline\" />\n      </Link>\n      <Link to={\"/settings\"} className=\"Link\">\n        <NavItem item=\"settings\" icon=\"cogs\" />\n      </Link>\n    </div>\n  );\n};\n\nexport default Navbar;\n","import React from \"react\";\nimport \"./SpotifyTrackInfo.css\";\n\nconst SpotifyTrackInfo = ({ header, text, icon }) => {\n  if (icon) {\n    icon = <i className={`${icon} icon inverted link big`} />;\n  } else {\n    icon = \"\";\n  }\n  return (\n    <div className=\"spotifyTrackInfo\">\n      <div className=\"spotifyTrackInfoHeader\">{header}</div>\n      <div style={{ display: \"flex\", alignItems: \"center\" }}>\n        <div className=\"spotifyTrackInfoText\">{text}</div>\n        {icon}\n      </div>\n    </div>\n  );\n};\n\nexport default SpotifyTrackInfo;\n","import React from \"react\";\nimport \"./SpotifyPlayer.css\";\nimport {\n  spotifyPlayerCommand,\n  spotifyCurrentlyPlaying\n} from \"../../../../../wednesday\";\nimport spotifyTrackInfo from \"./SpotifyTrackInfo/SpotifyTrackInfo\";\nimport SpotifyTrackInfo from \"./SpotifyTrackInfo/SpotifyTrackInfo\";\n\nconst SpotifyPlayer = ({\n  artist,\n  song,\n  album,\n  albumArtUrl,\n  isPlaying,\n  isLocal,\n  shuffle,\n  shuffleEnabled,\n  next,\n  previous,\n  playOrPause\n}) => {\n  isLocal = true;\n  var playOrPauseCurrentButton = isPlaying === true ? \"pause\" : \"play\";\n  var shuffleButtonColor = shuffleEnabled === true ? { color: \"#ff5e54\" } : {};\n  var saveButton =\n    isLocal === true ? \"check green\" : \"plus square outline grey\";\n  return (\n    <div>\n      <div className=\"spotifyCurrentTrack\">\n        <div>\n          <img src={albumArtUrl} className=\"spotifyAlbumArtwork\" />\n        </div>\n        <div>\n          <SpotifyTrackInfo header=\"Artist\" text={artist} />\n          <SpotifyTrackInfo header=\"Song\" text={song} icon={saveButton} />\n          <SpotifyTrackInfo header=\"Album\" text={album} />\n        </div>\n      </div>\n      <div className=\"spotifyControls\">\n        <i className=\"step backward icon link huge\" onClick={previous} />\n        <i\n          className={`${playOrPauseCurrentButton} icon link huge`}\n          onClick={() => playOrPause(playOrPauseCurrentButton)}\n        />\n        <i className=\"step forward icon link huge\" onClick={next} />\n        <i\n          className={`random icon link huge`}\n          style={shuffleButtonColor}\n          onClick={shuffle}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default SpotifyPlayer;\n","import React from \"react\";\nimport \"./SongProgressBar.css\";\nimport { secondsToMinutes } from \"../../../../../../time\";\n\nconst songProgressBar = ({ currentMilliseconds, totalMillieconds }) => {\n  return (\n    <div className=\"songProgressBar\">\n      <h2 className=\"timeStamp\">\n        {secondsToMinutes(Math.round(currentMilliseconds / 1000))}\n      </h2>\n\n      <div\n        style={{\n          width: \"75%\",\n          backgroundColor: \"#555555\"\n        }}\n      >\n        <div\n          style={{\n            height: \"100%\",\n            width: `${Math.floor(\n              Number(currentMilliseconds / totalMillieconds) * 100\n            )}%`,\n            backgroundColor: \"#ff5e54\"\n          }}\n        >\n          {\"\\xa0\"}\n        </div>\n      </div>\n      <h2 className=\"timeStamp\">\n        {secondsToMinutes(Math.floor(totalMillieconds / 1000))}\n      </h2>\n    </div>\n  );\n};\n\nexport default songProgressBar;\n","import React from \"react\";\nimport \"./FutureDay.css\";\n\nconst FutureDay = ({ day, icon, high, low }) => {\n  return (\n    <div className=\"weatherFutureDay\">\n      <h1 className=\"weatherFutureDayHeader\">{day}</h1>\n      <img\n        className=\"weatherIconSmall\"\n        src={`/images/weather_icons/${icon}.png`}\n        alt=\"weather icon\"\n      />\n      <div className=\"HiLo\">\n        <span>\n          <span className=\"HiLoLabel\">HI: </span>{\" \"}\n          <span className=\"HiLoValue\">{high}</span>\n        </span>\n        <span>\n          <span className=\"HiLoLabel\">LO: </span>{\" \"}\n          <span className=\"HiLoValue\">{low}</span>\n        </span>\n      </div>\n    </div>\n  );\n};\n\nexport default FutureDay;\n","import React from \"react\";\nimport \"./FutureHour.css\";\n\nconst FutureHour = ({ hour, icon, temperature }) => {\n  return (\n    <div className=\"weatherFutureHour\">\n      <h1 className=\"weatherFutureHourHeader\">{hour}</h1>\n      <img\n        className=\"weatherIconSmall\"\n        src={`/images/weather_icons/${icon}.png`}\n        alt=\"weather icon\"\n      />\n      <div className=\"weatherFutureHourTemperature\">{temperature} °F</div>\n    </div>\n  );\n};\n\nexport default FutureHour;\n","import React from \"react\";\nimport { randomWednesdayQuote } from \"../../../wednesday\";\n\nconst Loading = () => {\n  return (\n    <div className=\"ui segment\" style={{ height: \"100%\" }}>\n      <div className=\"ui active dimmer\" style={{ height: \"100%\" }}>\n        <div\n          className=\"ui text loader huge\"\n          style={{ left: \"48%\", top: \"48%\" }}\n        >\n          {randomWednesdayQuote()}\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default Loading;\n","import React from \"react\";\nimport \"./WeatherSummaryDetail.css\";\n\nconst WeatherSummaryDetail = ({ detailName, detailValue }) => {\n  return (\n    <span>\n      <span className=\"weatherSummaryDetailLabel\">{detailName}:</span>{\" \"}\n      <span className=\"weatherSummaryDetailValue\">{detailValue}</span>\n      <br />\n    </span>\n  );\n};\n\nexport default WeatherSummaryDetail;\n","import React, { Component } from \"react\";\nimport \"./Weather.css\";\nimport FutureDay from \"./FutureDay/FutureDay\";\nimport FutureHour from \"./FutureHour/FutureHour\";\nimport Loading from \"../Loading\";\nimport {\n  nextFiveWeekdays,\n  abbreviateWeekday,\n  standardizeTime,\n  militarizeTime,\n  abbreviateTime\n} from \"../../../../time\";\nimport { weatherService } from \"../../../../wednesday\";\nimport WeatherSummaryDetail from \"./WeatherSummaryDetail/WeatherSummaryDetail\";\n\nclass Weather extends Component {\n  constructor(props) {\n    super(props);\n    this.weatherRefresher = setInterval(this.updateWeather, 1800000);\n    this.state = {\n      loading: true\n    };\n  }\n  updateWeather() {\n    weatherService()\n      .then(weather => {\n        const sunrise = weather.daily.data[0].sunriseTime;\n        const sunset = weather.daily.data[0].sunsetTime;\n        this.setState({\n          loading: false,\n          current: {\n            summary: String(weather.currently.summary).toLowerCase(),\n            icon: weather.currently.icon,\n            temperature: Number(weather.currently.temperature).toFixed(),\n            cloudCover: Number(weather.currently.cloudCover * 100).toFixed(),\n            humidity: Number(weather.currently.humidity * 100).toFixed(),\n            windSpeed: weather.currently.windSpeed,\n            temperatureHigh: Number(\n              weather.daily.data[0].temperatureHigh\n            ).toFixed(),\n            temperatureLow: Number(\n              weather.daily.data[0].temperatureLow\n            ).toFixed(),\n            sunrise:\n              this.props.timeFormat === \"standard\"\n                ? standardizeTime(sunrise)\n                : militarizeTime(sunrise),\n            sunset:\n              this.props.timeFormat === \"standard\"\n                ? standardizeTime(sunset)\n                : militarizeTime(sunset)\n          },\n          hourly: weather.hourly.data,\n          daily: weather.daily.data\n        });\n      })\n      .catch(e => console.log(e));\n  }\n  componentDidMount() {\n    this.updateWeather();\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.weatherRefresher);\n  }\n\n  render() {\n    if (this.state.loading === true) {\n      return (\n        <div>\n          <h1 className=\"title\">Weather</h1>\n          <Loading />\n        </div>\n      );\n    } else {\n      var todayForecast = [];\n      for (let i = 1; i <= 8; i++) {\n        var hour = this.state.hourly[i];\n        todayForecast.push(\n          <FutureHour\n            hour={abbreviateTime(standardizeTime(hour.time))}\n            temperature={Number(hour.temperature).toFixed()}\n            icon={hour.icon}\n            key={`hour${i}`}\n          />\n        );\n      }\n      const dayPreference = \"long\";\n      var fiveDayForecast = nextFiveWeekdays().map((day, index) => (\n        <FutureDay\n          day={dayPreference === \"short\" ? abbreviateWeekday(day) : day}\n          high={Number(this.state.daily[index + 1].temperatureHigh).toFixed()}\n          low={Number(this.state.daily[index + 1].temperatureLow).toFixed()}\n          icon={this.state.daily[index + 1].icon}\n        />\n      ));\n\n      return (\n        <div>\n          <div\n            style={{\n              display: \"flex\",\n              flexDirection: \"row\",\n              justifyContent: \"space-between\",\n              alignItems: \"flex-end\"\n            }}\n          >\n            <h1 className=\"title\">Weather</h1>\n            <div style={{ paddingRight: \"20px\" }}>\n              <button\n                className=\"ui button inverted secondary\"\n                onClick={this.updateWeather}\n              >\n                Refresh Weather Data\n              </button>\n              <div className=\"darkSkyWatermark\">\n                Powered by <a href=\"https://darksky.net/poweredby/\">Dark Sky</a>\n              </div>\n            </div>\n          </div>\n          <div className=\"content\">\n            <h2 className=\"subtitle\">Current Conditions</h2>\n            <div className=\"weatherCurrentConditions\">\n              <span className=\"helper\" />\n              <img\n                className=\"weatherIconBig\"\n                src={`/images/weather_icons/${this.state.current.icon}.png`}\n                alt=\"weather icon\"\n              />{\" \"}\n              <div className=\"weatherTemperature\">\n                {this.state.current.temperature}{\" \"}\n                {this.props.units === \"imperial\" ? \"°F\" : \"°C\"}\n              </div>\n              <div className=\"weatherSummary\">\n                <table className=\"weatherSummary\">\n                  <tbody>\n                    <tr>\n                      <td>\n                        <WeatherSummaryDetail\n                          detailName=\"Conditions\"\n                          detailValue={this.state.current.summary}\n                        />\n                        <WeatherSummaryDetail\n                          detailName=\"Cloud Coverage\"\n                          detailValue={this.state.current.cloudCover + \"%\"}\n                        />\n                        <WeatherSummaryDetail\n                          detailName=\"Humidity\"\n                          detailValue={this.state.current.humidity + \"%\"}\n                        />\n                        <WeatherSummaryDetail\n                          detailName=\"Wind\"\n                          detailValue={\n                            Number(this.state.current.windSpeed).toFixed() +\n                            \" mph\"\n                          }\n                        />\n                      </td>\n                      <td>\n                        <WeatherSummaryDetail\n                          detailName=\"High\"\n                          detailValue={this.state.current.temperatureHigh}\n                        />\n                        <WeatherSummaryDetail\n                          detailName=\"Low\"\n                          detailValue={this.state.current.temperatureLow}\n                        />\n                        <WeatherSummaryDetail\n                          detailName=\"Sunrise\"\n                          detailValue={this.state.current.sunrise}\n                        />\n                        <WeatherSummaryDetail\n                          detailName=\"Sunset\"\n                          detailValue={this.state.current.sunset}\n                        />\n                      </td>\n                    </tr>\n                  </tbody>\n                </table>\n              </div>\n            </div>\n          </div>\n          <div className=\"content\">\n            <h2 className=\"subtitle\">Today</h2>\n            <div className=\"weatherFiveDayForecast\">{todayForecast}</div>\n          </div>\n          <div className=\"content\">\n            <h2 className=\"subtitle\" style={{ marginTop: \"20px\" }}>\n              5-Day Forecast\n            </h2>\n            <div className=\"weatherFiveDayForecast\">{fiveDayForecast}</div>\n          </div>\n        </div>\n      );\n    }\n  }\n}\n\nexport default Weather;\n","import React from \"react\";\n\nconst Vehicle = () => {\n  return (\n    <div>\n      <h1 className=\"title\">Vehicle</h1>\n    </div>\n  );\n};\n\nexport default Vehicle;\n","import React from \"react\";\nimport \"./News.css\";\n\nconst News = () => {\n  return (\n    <div>\n      <div\n        style={{\n          display: \"flex\",\n          flexDirection: \"row\",\n          justifyContent: \"space-between\",\n          alignItems: \"center\"\n        }}\n      >\n        <h1 className=\"title\">news</h1>\n        <div\n          className=\"newsApiWatermark\"\n          style={{\n            margin: \"13px 100px 0px 0px\"\n          }}\n        >\n          Powered by <a href=\"https://newsapi.org\">NewsAPI.org</a>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default News;\n","import React from \"react\";\n\nconst Settings = () => {\n  return (\n    <div>\n      <h1 className=\"title\">settings</h1>\n    </div>\n  );\n};\n\nexport default Settings;\n","import React from \"react\";\n\nconst Home = () => {\n  return (\n    <div>\n      <h1 className=\"title\">Wednesday</h1>\n    </div>\n  );\n};\n\nexport default Home;\n","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport \"./Dashboard.css\";\nimport Spotify from \"./Spotify/Spotify\";\nimport Weather from \"./Weather/Weather\";\nimport Vehicle from \"./Vehicle/Vehicle\";\nimport News from \"./News/News\";\nimport Settings from \"./Settings/Settings\";\nimport Home from \"./Home/Home\";\n\nconst Dashboard = () => {\n  return (\n    <div className=\"Dashboard\">\n      <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <Route path=\"/home\" component={Home} />\n        <Route\n          path=\"/weather\"\n          render={() => <Weather timeFormat=\"standard\" units=\"imperial\" />}\n        />\n        <Route path=\"/spotify\" component={Spotify} />\n        <Route path=\"/vehicle\" render={() => <Vehicle />} />\n        <Route path=\"/news\" render={() => <News />} />\n        <Route path=\"/settings\" render={() => <Settings />} />\n        <Route path=\"/\" render={() => \"wat\"} />\n      </Switch>\n    </div>\n  );\n};\n\nexport default Dashboard;\n","import React from \"react\";\n\nconst Wednesday = () => {\n  return <img src=\"images/wednesday3.png\" id=\"Wednesday\" alt=\"Wednesday\" />;\n};\n\nexport default Wednesday;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Navbar from \"./components/App/Navbar/Navbar\";\nimport Dashboard from \"./components/App/Dashboard/Dashboard\";\nimport Wednesday from \"./components/App/Wednesday/Wednesday\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Navbar />\n        <Dashboard />\n        <Wednesday id=\"Wednesday\" />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}